$date
	Sat Jun 22 20:10:57 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module Adder_CLA_4bit_TB $end
$var wire 4 ! S_TB [0:3] $end
$var wire 1 " C_TB $end
$var reg 4 # A_TB [0:3] $end
$var reg 4 $ B_TB [0:3] $end
$var reg 1 % C_IN_TB $end
$scope module DUT $end
$var wire 4 & a [0:3] $end
$var wire 4 ' b [0:3] $end
$var wire 1 % inC $end
$var wire 1 " outC $end
$var wire 4 ( s [0:3] $end
$var wire 4 ) p [0:3] $end
$var wire 4 * g [0:3] $end
$var wire 4 + c [0:3] $end
$scope module U0 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 . g $end
$var wire 1 / inC $end
$var wire 1 0 p $end
$var wire 1 1 s $end
$upscope $end
$scope module U1 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 4 g $end
$var wire 1 5 inC $end
$var wire 1 6 p $end
$var wire 1 7 s $end
$upscope $end
$scope module U2 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 : g $end
$var wire 1 ; inC $end
$var wire 1 < p $end
$var wire 1 = s $end
$upscope $end
$scope module U3 $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 @ g $end
$var wire 1 A inC $end
$var wire 1 B p $end
$var wire 1 C s $end
$upscope $end
$upscope $end
$scope task applyTest $end
$upscope $end
$scope task setupTest $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
0%
b0 $
b0 #
0"
b0 !
$end
#100
17
16
1C
1B
11
10
b1111 !
b1111 (
1=
b1111 )
1<
13
1?
1,
18
b101 $
b101 '
b1010 #
b1010 &
#200
1;
0C
01
00
b110 !
b110 (
1=
b101 )
0<
1A
0,
08
b11 +
1%
b0 #
b0 &
#300
1"
1/
07
15
b1111 +
01
10
0=
b1111 )
1<
b1 !
b1 (
1C
b1 *
1@
1-
19
1>
b1111 $
b1111 '
b1 #
b1 &
#900
